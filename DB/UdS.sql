-- MySQL Script generated by MySQL Workbench
-- Tue Apr 16 19:37:03 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema uds_devel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema uds_devel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `uds_devel` DEFAULT CHARACTER SET utf8 ;
USE `uds_devel` ;

-- -----------------------------------------------------
-- Table `uds_devel`.`Materiale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Materiale` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(45) NOT NULL COMMENT 'Nome del materiale',
  `descrizione` VARCHAR(100) NULL COMMENT 'Testo descrittivo del materiale',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`Zaino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Zaino` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Elemento` VARCHAR(45) NOT NULL COMMENT 'Nome del materiale medico',
  `Numero` INT NULL COMMENT 'Numero di elementi da mettere nello zaino',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`Tappa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Tappa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Tappa` VARCHAR(45) NOT NULL COMMENT 'Nome della tappa',
  `Indirizzo` VARCHAR(200) NOT NULL COMMENT 'Indirizzo della tappa',
  `Note` TEXT NULL COMMENT 'Note generali sulla tappa',
  `id_percorso` INT NOT NULL COMMENT 'Id del percorso a cui appartiene la tappa',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Percorso_Tappa`
    FOREIGN KEY (`id_percorso`)
    REFERENCES `uds_devel`.`percorso` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`Percorso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Percorso` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Percorso` VARCHAR(45) NOT NULL COMMENT 'Nome del percorso',
  `Descrizione` VARCHAR(100) NULL COMMENT 'Testo di descrizione del percorso',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`Missione`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Missione` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Compilatore` VARCHAR(100) NOT NULL COMMENT 'Nome del compilatore',
  `Telefono` VARCHAR(15) NOT NULL COMMENT 'Numero di telefono del compilatore',
  `Comitato` VARCHAR(45) NOT NULL COMMENT 'Comitato di appartenenza del compilatore',
  `Note` TEXT NULL COMMENT 'Note del compilatore per responsabile esempio materiale mancante)',
  `Percorso_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Missione_Percorso1_idx` (`Percorso_id` ASC) VISIBLE,
  CONSTRAINT `fk_Missione_Percorso1`
    FOREIGN KEY (`Percorso_id`)
    REFERENCES `uds_devel`.`Percorso` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`DiarioTappa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`DiarioTappa` (
  `idDiario` INT NOT NULL,
  `Tappa` VARCHAR(45) NOT NULL COMMENT 'Nome della tappa effettuata (per quelle standard saranno prese dalla relazione con percorso)',
  `Indirizzo` VARCHAR(200) NOT NULL COMMENT 'Indirizzo della tappa effettuata (per quelle standard saranno prese dalla relazione con percorso)',
  `NumPersone` INT NULL DEFAULT 0,
  `Note` TEXT NULL COMMENT 'Note della tappa impostate da admin (prese dalla tabella tappe)',
  `Richieste` TEXT NULL COMMENT 'Richieste degli utenti raccolte nella tappa',
  `ProssimiTurni` TEXT NULL COMMENT 'Note per i prossimi turni',
  `Missione_id` INT NOT NULL,
  PRIMARY KEY (`idDiario`),
  INDEX `fk_DiarioTappa_Missione1_idx` (`Missione_id` ASC) VISIBLE,
  CONSTRAINT `fk_DiarioTappa_Missione1`
    FOREIGN KEY (`Missione_id`)
    REFERENCES `uds_devel`.`Missione` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`Utente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`Utente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(100) NULL COMMENT 'Nome utente',
  `DiarioTappa_idDiario` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Utente_DiarioTappa1_idx` (`DiarioTappa_idDiario` ASC) VISIBLE,
  CONSTRAINT `fk_Utente_DiarioTappa1`
    FOREIGN KEY (`DiarioTappa_idDiario`)
    REFERENCES `uds_devel`.`DiarioTappa` (`idDiario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uds_devel`.`MaterialeDistribuito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `uds_devel`.`MaterialeDistribuito` (
  `Materiale_id` INT NOT NULL,
  `DiarioTappa_idDiario` INT NOT NULL,
  `Numero` INT NULL COMMENT 'Numero di elementi da mettere nella cassetta',
  PRIMARY KEY (`Materiale_id`, `DiarioTappa_idDiario`),
  INDEX `fk_Materiale_has_DiarioTappa_DiarioTappa1_idx` (`DiarioTappa_idDiario` ASC) VISIBLE,
  INDEX `fk_Materiale_has_DiarioTappa_Materiale1_idx` (`Materiale_id` ASC) VISIBLE,
  CONSTRAINT `fk_Materiale_has_DiarioTappa_Materiale1`
    FOREIGN KEY (`Materiale_id`)
    REFERENCES `uds_devel`.`Materiale` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Materiale_has_DiarioTappa_DiarioTappa1`
    FOREIGN KEY (`DiarioTappa_idDiario`)
    REFERENCES `uds_devel`.`DiarioTappa` (`idDiario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
